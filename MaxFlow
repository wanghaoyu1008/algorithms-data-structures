//maxflow
//LuoguP3376
#include<cstdio>
#include<iostream>
using namespace std;
const int N=1e4+4;
const int M=2e5+5;
const int INF=1e9+9;

int n,m;
struct graph{
	int cnt,l[N],x[M],e[M],f[M];
	int d[N],r[N];
	int s,t;
	int hd,tl,q[N];
	graph(){
		cnt=1;
	}
	void pshe(int u,int v,int c){
		++cnt;x[cnt]=l[u];l[u]=cnt;e[cnt]=v;f[cnt]=c;
		++cnt;x[cnt]=l[v];l[v]=cnt;e[cnt]=u;f[cnt]=0;
	}
	bool bfs(){
		int i,v;
		for(i=1;i<=n;i++)d[i]=-1;
		d[s]=1;hd=0;tl=1;q[0]=s;
		while(hd!=tl){
			v=q[hd];++hd;
			for(i=l[v];i;i=x[i])
				if(f[i]&&d[e[i]]==-1){
					d[e[i]]=d[v]+1;
					q[tl]=e[i];++tl;
				}
		}
		return d[t]!=-1;
	}
	int dfs(int v,int c){
		if(v==t)return c;
		int w=0,p;
		for(int i=r[v];i;i=x[i])
			if(f[i]&&d[e[i]]==d[v]+1){
				p=c-w;p=dfs(e[i],min(p,f[i]));
				f[i]-=p;if(f[i])r[v]=i;f[i^1]+=p;
				w+=p;if(w==c)return c;
			}
		if(!w)d[v]=-1;
		return w;
	}
	int dinic(int u,int v){
		int i,ans=0;
		s=u;t=v;
		while(bfs()){
			for(i=1;i<=n;i++)r[i]=l[i];
			ans+=dfs(s,INF);
		}
		return ans;
	}
}graph;

int main()
{
	int i,u,v,w,s,t;
	scanf("%d%d%d%d",&n,&m,&s,&t);
	for(i=1;i<=m;i++){
		scanf("%d%d%d",&u,&v,&w);
		graph.pshe(u,v,w); 
	}
	printf("%d",graph.dinic(s,t));
	return 0;
}
