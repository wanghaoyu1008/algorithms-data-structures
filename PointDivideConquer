//point divide and conquer
//LuoguP3806
#include<iostream>
#include<cstdio>
#include<bitset>
#include<cstring>
using namespace std;
const int N=1e4+4;
const int INF=1e7+7;

int cnt,l[N],x[2*N],e[2*N],w[2*N];
int s[N],k[N],b[N],d[N],t[N],tp;
bitset<INF>h;

void pshe(int u,int v,int c){
	++cnt;x[cnt]=l[u];l[u]=cnt;e[cnt]=v;w[cnt]=c;
}

int fbc(int v,int f,int sz){//find barycenter
	int i,u=0,o;
	s[v]=1;k[v]=0;
	for(i=l[v];i;i=x[i])
		if(e[i]!=f&&!b[e[i]]){
			o=fbc(e[i],v,sz);
			s[v]+=s[e[i]];
			if(k[o]<k[u])u=o;
			k[v]=max(k[v],s[e[i]]);
		}
	k[v]=max(k[v],sz-s[v]);
	if(k[v]<k[u])u=v;
	return u;
}

bool dfs(int v,int f,int c){
	int i;t[++tp]=d[v];
	if(c-d[v]>=0&&h[c-d[v]])return 1;
	for(i=l[v];i;i=x[i])
		if(!b[e[i]]&&e[i]!=f){
			d[e[i]]=d[v]+w[i];
			if(dfs(e[i],v,c))return 1;
		}
	return 0;
}

bool wrk(int v,int c){
	int i,p=1;tp=0;
	d[v]=0;t[0]=0;h[0]=1;
	for(i=l[v];i;i=x[i])
		if(!b[e[i]]){
			d[e[i]]=w[i];
			if(dfs(e[i],v,c)){
				for(p=0;p<=tp;p++)h[t[p]]=0;
				return 1;
			}
			for(;p<=tp;p++)h[t[p]]=1;
		}
	for(p=0;p<=tp;p++)h[t[p]]=0;
	return 0;
}

bool slv(int v,int c){
	v=fbc(v,0,s[v]);
	if(wrk(v,c))return 1;
	b[v]=1;
	for(int i=l[v];i;i=x[i])
		if(!b[e[i]]&&slv(e[i],c))return 1;
	return 0;
}

int main()
{
	int n,m,i,u,v,c;
	scanf("%d%d",&n,&m);
	for(i=1;i<n;i++){
		scanf("%d%d%d",&u,&v,&c);
		pshe(u,v,c);pshe(v,u,c);
	}
	for(i=1;i<=m;i++){
		scanf("%d",&c);
		memset(b,0,sizeof(b));
		k[0]=INF;s[1]=n+1;
		if(slv(1,c))printf("AYE\n");
		else printf("NAY\n");
	}
	return 0;
}
