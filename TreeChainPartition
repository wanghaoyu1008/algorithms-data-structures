//tree chain partition
//LuoguP3384
#include<cstdio>
#include<iostream>
using namespace std;
const int N=1e5+5;

int P;
struct segmenttree{
	int cnt,rt,c[2*N][2],in[2*N][2],lz[2*N],sm[2*N];
	int bld(int a[],int k[],int l,int r){
		int v=++cnt,mid=(l+r)>>1;in[v][0]=l;in[v][1]=r;if(l==r){sm[v]=a[k[mid]];return v;}
		c[v][0]=bld(a,k,l,mid);c[v][1]=bld(a,k,mid+1,r);sm[v]=(sm[c[v][0]]+sm[c[v][1]])%P;return v;
	}
	void init(int a[],int k[],int n){rt=bld(a,k,1,n);}
	void updt(int v){
		if(in[v][0]!=in[v][1]){
			lz[c[v][0]]+=lz[v];lz[c[v][0]]%=P;sm[c[v][0]]+=lz[v]*(in[c[v][0]][1]-in[c[v][0]][0]+1)%P;sm[c[v][0]]%=P;
			lz[c[v][1]]+=lz[v];lz[c[v][1]]%=P;sm[c[v][1]]+=lz[v]*(in[c[v][1]][1]-in[c[v][1]][0]+1)%P;sm[c[v][1]]%=P;
			sm[v]=(sm[c[v][0]]+sm[c[v][1]])%P;
		}
		lz[v]=0;
	}
	void chng(int v,int l,int r,int t){
		updt(v);if(l<=in[v][0]&&in[v][1]<=r){lz[v]=t;sm[v]+=t*(in[v][1]-in[v][0]+1)%P;sm[v]%=P;return;}
		if(l<=in[c[v][0]][1])chng(c[v][0],l,r,t);if(in[c[v][1]][0]<=r)chng(c[v][1],l,r,t);updt(v);
	}
	void change(int l,int r,int t){chng(rt,l,r,t);}
	int srch(int v,int l,int r){
		updt(v);if(l<=in[v][0]&&in[v][1]<=r)return sm[v];
		int s=0;if(l<=in[c[v][0]][1])s+=srch(c[v][0],l,r),s%=P;if(in[c[v][1]][0]<=r)s+=srch(c[v][1],l,r),s%=P;updt(v);return s;
	}
	int search(int l,int r){return srch(rt,l,r);}
};
int a[N],k[N],n;
struct tree{
	segmenttree tr;
	int l[N],e[2*N],x[2*N],cnt;
	int f[N],d[N],s[N],dfn[N],hh[N],hs[N],tm;
	tree(){cnt=0;tm=0;}
	void psh(int u,int v){
		++cnt;x[cnt]=l[u];l[u]=cnt;e[cnt]=v;
		++cnt;x[cnt]=l[v];l[v]=cnt;e[cnt]=u;
	}
	void dfs1(int v){s[v]=1;for(int i=l[v];i;i=x[i])if(e[i]!=f[v]){f[e[i]]=v;d[e[i]]=d[v]+1;dfs1(e[i]);s[v]+=s[e[i]];if(s[e[i]]>s[hs[v]])hs[v]=e[i];}}
	void dfs2(int v){dfn[v]=++tm;if(hs[v]){hh[hs[v]]=hh[v];dfs2(hs[v]);}for(int i=l[v];i;i=x[i])if(e[i]!=f[v]&&e[i]!=hs[v]){hh[e[i]]=e[i];dfs2(e[i]);}}
	void init(int rt){d[rt]=1;f[rt]=0;dfs1(rt);hh[rt]=rt;dfs2(rt);for(int i=1;i<=n;i++)k[dfn[i]]=i;tr.init(a,k,n);}
	void changelink(int x,int y,int t){
		while(hh[x]!=hh[y]){if(d[hh[x]]<d[hh[y]]){tr.change(dfn[hh[y]],dfn[y],t);y=f[hh[y]];}else{tr.change(dfn[hh[x]],dfn[x],t);x=f[hh[x]];}}
		if(d[x]>d[y])tr.change(dfn[y],dfn[x],t);else tr.change(dfn[x],dfn[y],t);
	}
	void changesub(int x,int t){tr.change(dfn[x],dfn[x]+s[x]-1,t);}
	int searchlink(int x,int y){
		int ans=0;
		while(hh[x]!=hh[y]){if(d[hh[x]]<d[hh[y]]){ans+=tr.search(dfn[hh[y]],dfn[y]);y=f[hh[y]];}else{ans+=tr.search(dfn[hh[x]],dfn[x]),ans%=P;x=f[hh[x]];}}
		if(d[x]>d[y])ans+=tr.search(dfn[y],dfn[x]),ans%=P;else ans+=tr.search(dfn[x],dfn[y]),ans%=P;
		return ans;
	}
	int searchsub(int x){return tr.search(dfn[x],dfn[x]+s[x]-1);}
}tr;

int main()
{
	int m,rt,i,o,u,v,t;
	scanf("%d%d%d%d",&n,&m,&rt,&P);
	for(i=1;i<=n;i++)scanf("%d",&a[i]);
	for(i=1;i<n;i++){scanf("%d%d",&u,&v);tr.psh(u,v);}
	tr.init(rt);
	for(i=1;i<=m;i++){
		scanf("%d",&o);
		if(o==1){scanf("%d%d%d",&u,&v,&t);tr.changelink(u,v,t);}
		if(o==2){scanf("%d%d",&u,&v);printf("%d\n",tr.searchlink(u,v));}
		if(o==3){scanf("%d%d",&u,&t);tr.changesub(u,t);}
		if(o==4){scanf("%d",&u);printf("%d\n",tr.searchsub(u));}
	}
	return 0;
}
